import React, {useEffect, useState} from "react";
import {GeoJSON, MapContainer, TileLayer, useMapEvent} from 'react-leaflet'
import axios from "axios";
import Data4 from "./Data4";
import {
    Chart,
    LineController,
    LineElement,
    PointElement,
    LinearScale,
    Title,
    CategoryScale,
    registerables
} from 'chart.js';
import {Line} from "react-chartjs-2";
import {useTranslation} from "react-i18next";

Chart.register(LineController, LineElement, PointElement, LinearScale, Title, CategoryScale);
Chart.register(...registerables)

const Map = () => {

    const [items, setItems] = useState([]);
    const [fiche, setFiche] = useState([]);
    const [reno, setReno] = useState([]);
    const [reverse, setReverse] = useState([]);
    const [rangeSlider, setRangeSlider] = useState(2016);
    const [draggingMap, setDraggingMap] = useState(true);
    const isReady = items.length > 0;
    // const isReady = false;

    const {t} = useTranslation();

    const position = [50.11151715069446, 4.704893466796865];

    const data = {
        labels: reno.filter(item => item.year !== '2022').map(item => item.year),
        // labels: reno.map(item => item.year),
        datasets: [{
            label: t("card_map_data.graph_title_cost"),
            data: reno.map(item => item.totalCost),
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: [
                '#FF6384',
            ],
            hoverBackgroundColor: [
                '#FF6384',
            ]
        }, {
            label: t("card_map_data.graph_title_prime"),
            data: reno.map(item => item.totalPrime),
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: [
                '#36A2EB',
            ],
            hoverBackgroundColor: [
                '#36A2EB',
            ]
        }]
    };

    useEffect(() => {
        const fetchData = async () => {
            try {
                const {data: response} = await axios.get('https://api.calculo2.be/api/arrondissement');
                setItems(response);
            } catch (error) {
                console.error(error.message);
            }
        }
        fetchData();
    }, [ ]);

    useEffect(() => {
        const fetchReno = async () => {
            try {
                const {data: response} = await axios.get(`https://api.calculo2.be/api/bydistrict/${fiche.id}`);
                setReno(response);
            } catch (error) {
                console.error(error.message);
            }
        }
        fetchReno();
    }, [fiche]);

    useEffect(() => {
        const fetchRenoReverse = async () => {
            try {
                const {data: response} = await axios.get(`https://api.calculo2.be/api/bydistrict/${fiche.id}`);
                setReverse(response.reverse());
            } catch (error) {
                console.error(error.message);
            }
        }
        fetchRenoReverse();
    }, [fiche]);

    const handleRangeSlider = (e) => {
        setRangeSlider(e.target.value);
    }

    function ClickOutsideMap() {
        useMapEvent('click', (e) => {
            setFiche([]);
        })
        return null
    }

    return (
        <>
            <div className="z-0 h-72 sm:h-auto sm:col-span-2 sm:row-span-2">
                {isReady ? (
                    <>
                        <MapContainer className="-z-[999] h-full w-full rounded-lg shadow-lg"
                                      center={position}
                                      zoom={8}
                                      scrollWheelZoom={false}
                                      dragging={false}
                                      doubleClickZoom={false}
                                      attributionControl={false}
                                      zoomControl={true}
                        >
                            <ClickOutsideMap />
                            <TileLayer
                                url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                            />
                            {items.map((item, index) => (
                                <GeoJSON
                                    key={index}
                                    style={(() => {
                                        switch (true) {
                                            case item.id === fiche.id :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#ff0000',
                                                    fillOpacity: 0.5
                                                };
                                            case (item.total[rangeSlider] >= 0 && item.total[rangeSlider] < 60)
                                            :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#7cebc8',
                                                    fillOpacity: 0.5
                                                };
                                            case (item.total[rangeSlider] >= 60 && item.total[rangeSlider] < 230)
                                            :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#5ab3a3',
                                                    fillOpacity: 0.5
                                                };

                                            case (item.total[rangeSlider] >= 230 && item.total[rangeSlider] < 500)
                                            :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#174b5d',
                                                    fillOpacity: 0.5
                                                };

                                            case (item.total[rangeSlider] >= 500 && item.total[rangeSlider] < 800)
                                            :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#02374e',
                                                    fillOpacity: 0.5
                                                };

                                            case item.total[rangeSlider] >= 800
                                            :
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#00354c',
                                                    fillOpacity: 0.5
                                                };
                                            default:
                                                return {
                                                    color: '#595959',
                                                    weight: 1,
                                                    fillColor: '#ffffff',
                                                    fillOpacity: 0.5
                                                }
                                        }
                                    })}
                                    data={item['geojson']}
                                    onEachFeature={(feature, layer) => {
                                        layer.bindPopup(`<h3>${item.entite}</h3>`);
                                        layer.on({
                                            click: () => setFiche(item)
                                        })
                                    }}
                                />
                            ))}
                            <div className={'leaflet-top w-full flex items-center justify-center'}>
                                <h1 className={'px-2 rounded-b-lg text-white bg-gray-700 text-'}>{t('card_map_data.legend.title')}</h1>
                            </div>
                            <div className={'leaflet-bottom w-full '}>
                                <div className="ml-2 mb-2 flex flex-col w-3/12 bg-gray-700">
                                    {/*<label htmlFor="customRange3" className="form-label text-white">Evolution des rénovations en fonction des années</label>*/}
                                    <div className={'h-3 w-full bg-gradient-to-r from-[#7CEBC8FF] to-[#00354CFF]'}/>
                                    <div className={'flex justify-between'}>
                                        <p className={'px-2 text-white'}>{t('card_map_data.legend.less')}</p>
                                        <p className={'px-2 text-white'}>{t('card_map_data.legend.more')}</p>
                                    </div>
                                </div>
                                <div
                                    className={'px-6 py-2 rounded-t-xl bg-gray-700 z-[9999] sm:col-span-2 sm:row-span-1'}>
                                    <input
                                        type="range"
                                        list='ticks'
                                        onChange={handleRangeSlider}
                                        defaultValue={rangeSlider}
                                        className="px-4 leaflet-control bg-white border-2 rounded-2xl appearance-none w-full h-6 bg-transparent focus:outline-none focus:ring-0 focus:shadow-none"
                                        min="2016" max="2021" step="1" id="customRange3"/>
                                    <datalist id='ticks' className={'text-white w-full flex justify-between text-xs px-2'}>
                                        <option value={'2016'}>2016</option>
                                        <option value={'2017'}>2017</option>
                                        <option value={'2018'}>2018</option>
                                        <option value={'2019'}>2019</option>
                                        <option value={'2020'}>2020</option>
                                        <option value={'2021'}>2021</option>
                                    </datalist>
                                </div>
                            </div>
                        </MapContainer>
                    </>
                ) : (
                    <div className="h-full w-full flex flex-col justify-center items-center">
                        <div className="text-center">
                            <div className="text-3xl font-bold">{t('loading.title')}</div>
                            <div className="text-lg">{t('loading.content')}</div>
                        </div>
                        <div>
                            <div className="h-full w-full flex justify-center items-center">
                                <div
                                    className="w-16 h-16 bg-gray-200 rounded-full flex mx-auto justify-center items-center">
                                    <svg className='animate-reverse-spin' version="1.2"
                                         xmlns="http://www.w3.org/2000/svg" viewBox="0 0 431 431">
                                        <title>logo_calculo2</title>
                                        <path id="Layer" className="fill-[#99ff33]"
                                              d="m296.2 168.7c-2.7 6.4-10.9 7.7-11.7 7.8-11.1 2.6-22-7.5-30.3-13.5-7.7-5.5-19.1-6.6-26.6 0q-1.3 1.2-2.4 2.6-1.1 1.3-2 2.8-0.9 1.5-1.5 3.2-0.7 1.6-1.1 3.3c-0.6 2.5-0.3 5-0.4 7.5-0.1 2.1-0.7 4.2-0.6 6.3 0.3 5.3 3.6 7.6 7.8 9.8 4.2 2.2 7.9 5.6 12 8.2 4.6 2.9 9.3 6.1 14.4 8.3 4.7 2 8.2 5.3 11.9 8.9 9 8.7 3.8 19.6 4.3 30.5q0.1 1 0.2 2 0.1 1.1 0.2 2.1 0.2 1 0.4 2 0.1 0.9 0.4 1.9 0 0.5 0 1 0 0.5 0 1-0.1 0.5-0.1 1 0 0.5-0.1 1c-0.2 2.1-1 7-5.4 13.8-4.3 6.8-14.4 19.2-20.3 16.9-4-1.6-1.2-8.5-7.4-12.7-4.2-2.7-9.5-3.8-14.4-4.1-2.3-0.2-4.6 0.2-6.8-0.2q-1-0.2-2-0.4-1-0.2-2.1-0.4-1-0.2-2-0.3-1-0.2-2-0.3c-2-0.2-4.4 0-6.4-0.7-1.6-0.5-2.6-2-4-3-5-3.8-10-2.7-15 0.4q-1 0.6-2 1.4-1 0.8-2 1.7-0.9 0.9-1.7 1.9-0.8 1-1.5 2.1-1 1.1-2.2 2.1-1.2 1-2.6 1.8-1.3 0.8-2.7 1.4-1.4 0.6-2.9 1c-6.3 1.6-13.9 0.1-17.1-4.4-1.1-1.5-2.3-4.2-1.4-5.3 0.8-1 2.8-0.3 4.4 0q1.7 0.4 3.4 0.5 1.7 0.1 3.5-0.1 1.7-0.3 3.3-0.9 1.7-0.5 3.1-1.5c7.3-4.6 10.7-17 8.9-25q-0.4-1.4-0.9-2.8-0.6-1.4-1.3-2.7-0.8-1.3-1.7-2.4-0.9-1.2-2-2.2c-3.6-3.4-8.6-5.4-10.9-10-4.1-8.1-5.9-20.2-0.2-27.9 2.9-3.9 7.3-4.4 11.2-6.9q1.4-1 2.6-2.1 1.3-1.1 2.5-2.3 1.1-1.3 2.1-2.7 1.1-1.3 1.9-2.8c2.4-3.7 6-6.5 7.8-10.6 2.4-5 5.6-7.2 10.6-10 8.2-4.7 18-5.8 23-14.9 5.3-9.4 0.5-20.7-9.8-24.2-13.9-4.8-25.6-3.8-26.3-7.3q0-0.3 0-0.6 0.1-0.3 0.2-0.6 0-0.3 0.2-0.5 0.1-0.3 0.3-0.5 3.9-1.6 7.9-2.8 4-1.3 8.1-2.1 4.1-0.9 8.2-1.3 4.2-0.5 8.3-0.5 4.3 0 8.6 0.2 4.3 0.3 8.6 0.9 4.3 0.6 8.5 1.4 4.2 0.9 8.3 2.1c2.5 2.3 5 4.9 4.5 8.1-0.5 3.3-3.5 4.9-3.9 10.2-0.3 4.3 2 7.3 5.5 9.4q1.1 0.6 2.1 1.2 1.1 0.6 2.1 1.2 1.1 0.5 2.2 1 1.1 0.5 2.2 1 1.1 0.4 2.2 0.8 1.1 0.3 2.2 0.6 1.1 0.3 2.3 0.6 1.1 0.2 2.2 0.4 1.4 0.2 2.7 0.4 1.4 0.2 2.8 0.3 1.3 0.1 2.7 0.2 1.3 0.1 2.7 0.1c4 0.7 8.6 2.3 11.1 6.1q0.8 1.2 1.3 2.6 0.5 1.4 0.6 2.8 0.2 1.5 0 2.9-0.3 1.4-0.8 2.8z"/>
                                        <path id="Layer" fillRule="evenodd" className="fill-[#3399ff]"
                                              d="m324.4 166.1q3 7.1 5 14.6 2 7.4 3 15 1 7.7 0.9 15.4c0 21.7-6.1 41-16.3 58.4-10.2 17.3-23.8 31.2-41.6 41.1-17.8 9.9-37.8 17-59.9 17-22.1 0-43.1-5.4-60.9-15.4-17.8-10-28.9-26.6-39.1-44-10.2-17.3-17.2-35.6-17.2-57.1 0-21.5 3.4-41.9 13.5-59.3 10.2-17.4 26.7-28.7 44.5-38.7q6.8-3.9 13.9-6.8 7.2-3 14.7-4.9 7.5-2 15.2-3 7.6-1 15.4-1c22.1 0 43.1 2.4 60.9 12.3 17.8 9.9 30.9 25.3 41.1 42.7q3.9 6.6 6.9 13.7zm-27.4-0.2q0.2-1.4 0-2.9-0.1-1.4-0.6-2.8-0.5-1.4-1.3-2.6c-2.5-3.8-7.1-5.4-11.1-6.1q-1.4 0-2.7-0.1-1.4-0.1-2.7-0.2-1.4-0.1-2.8-0.3-1.3-0.2-2.7-0.4-1.1-0.2-2.2-0.4-1.2-0.3-2.3-0.6-1.1-0.3-2.2-0.6-1.1-0.4-2.2-0.8-1.1-0.5-2.2-1-1.1-0.5-2.2-1-1-0.6-2.1-1.2-1-0.6-2.1-1.2c-3.5-2.1-5.8-5.1-5.5-9.4 0.4-5.3 3.4-6.9 3.9-10.2 0.5-3.2-2-5.8-4.5-8.1q-4.1-1.2-8.3-2.1-4.2-0.8-8.5-1.4-4.3-0.6-8.6-0.9-4.3-0.2-8.6-0.2-4.1 0-8.3 0.5-4.1 0.4-8.2 1.3-4.1 0.8-8.1 2.1-4 1.2-7.9 2.8-0.2 0.2-0.3 0.5-0.2 0.2-0.2 0.5-0.1 0.3-0.2 0.6 0 0.3 0 0.6c0.7 3.5 12.4 2.5 26.3 7.3 10.3 3.5 15.1 14.8 9.8 24.2-5 9.1-14.8 10.2-23 14.9-5 2.8-8.2 5-10.6 10-1.8 4.1-5.4 6.9-7.8 10.6q-0.8 1.5-1.9 2.8-1 1.4-2.1 2.7-1.2 1.2-2.5 2.3-1.2 1.1-2.6 2.1c-3.9 2.5-8.3 3-11.2 6.9-5.7 7.7-3.9 19.8 0.2 27.9 2.3 4.6 7.3 6.6 10.9 10q1.1 1 2 2.2 0.9 1.1 1.7 2.4 0.7 1.3 1.3 2.7 0.5 1.4 0.9 2.8c1.8 8-1.6 20.4-8.9 25q-1.4 1-3.1 1.5-1.6 0.6-3.3 0.9-1.8 0.2-3.5 0.1-1.7-0.1-3.4-0.5c-1.6-0.3-3.6-1-4.4 0-0.9 1.1 0.3 3.8 1.4 5.3 3.2 4.5 10.8 6 17.1 4.4q1.5-0.4 2.9-1 1.4-0.6 2.7-1.4 1.4-0.8 2.6-1.8 1.2-1 2.2-2.1 0.7-1.1 1.5-2.1 0.8-1 1.7-1.9 1-0.9 2-1.7 1-0.8 2-1.4c5-3.1 10-4.2 15-0.4 1.4 1 2.4 2.5 4 3 2 0.7 4.4 0.5 6.4 0.7q1 0.1 2 0.3 1 0.1 2 0.3 1.1 0.2 2.1 0.4 1 0.2 2 0.4c2.2 0.4 4.5 0 6.8 0.2 4.9 0.3 10.2 1.4 14.4 4.1 6.2 4.2 3.4 11.1 7.4 12.7 5.9 2.3 16-10.1 20.3-16.9 4.4-6.8 5.2-11.7 5.4-13.8q0.1-0.5 0.1-1 0-0.5 0.1-1 0-0.5 0-1 0-0.5 0-1-0.3-1-0.4-1.9-0.2-1-0.4-2-0.1-1-0.2-2.1-0.1-1-0.2-2c-0.5-10.9 4.7-21.8-4.3-30.5-3.7-3.6-7.2-6.9-11.9-8.9-5.1-2.2-9.8-5.4-14.4-8.3-4.1-2.6-7.8-6-12-8.2-4.2-2.2-7.5-4.5-7.8-9.8-0.1-2.1 0.5-4.2 0.6-6.3 0.1-2.5-0.2-5 0.4-7.5q0.4-1.7 1.1-3.3 0.6-1.7 1.5-3.2 0.9-1.5 2-2.8 1.1-1.4 2.4-2.6c7.5-6.6 18.9-5.5 26.6 0 8.3 6 19.2 16.1 30.3 13.5 0.8-0.1 9-1.4 11.7-7.8q0.5-1.4 0.8-2.8z"/>
                                        <path id="Layer" className="fill-[#000000]"
                                              d="m228.8 386.3l-2.2-16.3c0.6 0 1-0.1 1.6-0.1q1.5-0.2 3-0.2c1.2-0.1 2.4-0.2 3.6-0.3 1.2-0.2 2.6-0.4 3.8-0.7q1.4-0.2 2.7-0.5c1.4-0.2 2.8-0.5 4.1-0.8l2.9-0.7c1.5-0.3 2.9-0.6 4.3-1l3.8 16q-2.3 0.5-4.7 1l-2.6 0.5c-1.7 0.4-3.4 0.8-5 1l-2.4 0.5c-1.6 0.3-3.2 0.6-4.8 0.8-1.6 0.2-3.2 0.3-4.8 0.4q-1.2 0-2.5 0.1zm-28.8-0.3l-1.2-0.1c-1.9-0.2-3.7-0.3-5.5-0.5-1.6-0.3-3.2-0.6-4.8-0.9l-4.5-0.7c-1.7-0.3-3.4-0.6-5-0.9q-0.2-0.1-0.5-0.1-0.3 0-0.5-0.1-0.3 0-0.5 0-0.3 0-0.6 0-0.6-0.1-1.3-0.1-0.6-0.1-1.3-0.2-0.6-0.1-1.3-0.2-0.6-0.1-1.3-0.3l4-15.8q0.3 0 0.6 0.1 0.3 0 0.6 0.1 0.3 0 0.6 0 0.2 0 0.5 0 0.6 0.1 1.1 0.1 0.6 0.1 1.2 0.1 0.5 0.1 1.1 0.2 0.5 0.1 1.1 0.2c1.3 0.3 2.7 0.5 4.1 0.7l2.4 0.4q1.3 0.2 2.6 0.5c1.3 0.2 2.5 0.5 3.8 0.6 1.6 0.2 3.1 0.3 4.7 0.4l1.3 0.1zm82.9-13l-5.4-15.5q0.8-0.2 1.6-0.6c1.1-0.5 2.2-0.9 3.4-1.3 0.9-0.4 1.8-0.7 2.7-1.2q0.2-0.1 0.4-0.2 0.1-0.1 0.3-0.3 0.2-0.1 0.4-0.3 0.1-0.1 0.3-0.3 0.5-0.4 0.9-0.8 0.5-0.3 1-0.7 0.5-0.4 1-0.7 0.6-0.3 1.1-0.6l0.5-0.3c1.8-1 3.5-2 5.2-3q0.4-0.3 0.9-0.6 0.4-0.2 0.9-0.4 0.5-0.3 0.9-0.5 0.5-0.2 0.9-0.5l0.6-0.2 7.1 14.7-0.7 0.3q-0.2 0.1-0.5 0.3-0.2 0.1-0.5 0.2-0.3 0.2-0.5 0.3-0.3 0.1-0.5 0.3c-1.9 1.1-3.8 2.2-5.8 3.3l-0.5 0.3q-0.2 0.1-0.4 0.3-0.2 0.1-0.3 0.2-0.2 0.2-0.4 0.3-0.1 0.2-0.3 0.3-0.5 0.5-1.1 0.9-0.5 0.5-1.1 0.9-0.6 0.4-1.2 0.7-0.6 0.4-1.2 0.7-0.5 0.3-1.1 0.5-0.5 0.3-1.1 0.5-0.5 0.2-1.1 0.5-0.5 0.2-1.1 0.4c-0.8 0.3-1.6 0.5-2.3 0.9-1.1 0.5-2 0.8-3 1.2zm-138.2-0.5l-0.7-0.3c-0.6-0.3-1.4-0.6-2.2-0.9-1.5-0.7-3-1.3-4.4-2-1.4-0.8-3-1.7-4.5-2.5l-1.9-1.1c-1.4-0.8-2.7-1.7-4-2.6-0.7-0.5-1.4-1-2.1-1.4l-0.5-0.3c-1.5-1-3.1-1.9-4.6-2.9l9-13.7q2.1 1.4 4.2 2.7l0.5 0.3q1.4 0.9 2.7 1.8c0.9 0.6 1.9 1.3 2.8 1.8l2.2 1.2c1.2 0.7 2.4 1.4 3.6 2 1.1 0.6 2.3 1 3.4 1.5q1.4 0.6 2.7 1.2zm186.2-29.8l-10-12.9c0.8-0.6 1.5-1.2 2.2-1.8q0.2-0.2 0.4-0.5 0.2-0.2 0.4-0.5 0.2-0.2 0.4-0.4 0.2-0.3 0.4-0.5 0.3-0.5 0.6-0.9 0.3-0.4 0.7-0.8 0.3-0.4 0.6-0.8 0.4-0.4 0.7-0.7c1.8-1.8 3.2-3.3 4.6-4.8 1-1.3 2.1-2.6 3.1-3.9l1-1.3q0.3-0.3 0.6-0.7 0.3-0.3 0.6-0.6 0.3-0.3 0.6-0.7 0.3-0.3 0.6-0.6l11.6 11.6q-0.1 0.1-0.3 0.3-0.2 0.2-0.3 0.3-0.2 0.2-0.3 0.4-0.2 0.1-0.3 0.3l-1 1.3c-1.2 1.4-2.4 3-3.7 4.4-1.5 1.7-3.1 3.3-4.7 5q-0.2 0.2-0.4 0.5-0.2 0.2-0.5 0.5-0.2 0.2-0.4 0.5-0.2 0.3-0.4 0.6-0.4 0.5-0.8 1-0.4 0.5-0.8 0.9-0.4 0.5-0.8 1-0.4 0.4-0.9 0.9-0.4 0.4-0.8 0.7-0.5 0.4-0.9 0.8-0.4 0.3-0.9 0.7-0.4 0.4-0.9 0.7zm-233.3-1.6q-0.8-0.7-1.7-1.5-0.4-0.4-0.8-0.9-0.5-0.4-0.9-0.8-0.4-0.5-0.8-1-0.4-0.4-0.7-0.9-0.8-1-1.7-1.9-0.2-0.2-0.4-0.4-0.2-0.1-0.4-0.3-0.2-0.2-0.4-0.4-0.2-0.2-0.4-0.3-0.5-0.4-1-0.8-0.5-0.4-1-0.9-0.5-0.4-0.9-0.9-0.5-0.4-0.9-0.9-0.4-0.5-0.8-1-0.4-0.5-0.8-1-0.3-0.5-0.7-1-0.3-0.5-0.7-1.1-0.1-0.2-0.3-0.5-0.1-0.2-0.3-0.4-0.1-0.3-0.3-0.5-0.2-0.2-0.4-0.5-0.7-0.9-1.6-1.8l-1.2-1.3 12.3-10.9 1 1.1q1.2 1.3 2.3 2.7 0.3 0.4 0.6 0.8 0.3 0.4 0.6 0.8 0.3 0.4 0.6 0.8 0.2 0.5 0.5 0.9 0.2 0.3 0.4 0.6 0.1 0.2 0.3 0.5 0.2 0.2 0.4 0.5 0.2 0.3 0.4 0.5 0.2 0.2 0.4 0.4 0.2 0.2 0.4 0.4 0.3 0.2 0.5 0.4 0.2 0.2 0.5 0.4 0.4 0.3 0.8 0.6 0.4 0.4 0.8 0.7 0.4 0.4 0.8 0.8 0.4 0.3 0.8 0.7c0.8 0.9 1.6 1.8 2.4 2.8q0.2 0.3 0.4 0.6 0.3 0.2 0.5 0.5 0.3 0.3 0.5 0.6 0.3 0.2 0.5 0.5 0.1 0.1 0.2 0.2 0.1 0.1 0.2 0.1 0.1 0.1 0.2 0.2 0.1 0.1 0.2 0.2zm268.2-44.1l-14.3-7.9q1.1-2 2.1-4 0.2-0.5 0.5-0.9 0.2-0.5 0.5-0.9 0.2-0.4 0.5-0.9 0.2-0.4 0.5-0.8 0.2-0.3 0.4-0.6 0.1-0.2 0.3-0.5 0.2-0.3 0.3-0.6 0.2-0.3 0.3-0.6c0.5-1.1 0.9-2.2 1.4-3.4q0.5-1.3 1-2.7 0.2-0.5 0.4-0.9 0.2-0.5 0.4-0.9 0.3-0.5 0.5-1 0.2-0.4 0.5-0.8 0.1-0.3 0.3-0.6 0.1-0.3 0.3-0.6 0.1-0.3 0.2-0.6 0.2-0.3 0.3-0.6l16.1 2.7q0 0.4-0.1 0.7-0.1 0.4-0.2 0.7-0.1 0.4-0.2 0.7-0.1 0.3-0.2 0.7-0.2 0.6-0.4 1.1-0.3 0.6-0.5 1.2-0.3 0.5-0.6 1.1-0.3 0.5-0.6 1.1-0.1 0.2-0.2 0.5-0.2 0.3-0.3 0.5-0.1 0.3-0.2 0.6-0.1 0.2-0.3 0.5-0.4 1.2-0.9 2.3c-0.5 1.5-1.1 3-1.7 4.5q-0.3 0.6-0.6 1.1-0.3 0.6-0.6 1.1-0.3 0.6-0.6 1.1-0.4 0.5-0.7 1c-0.4 0.7-0.9 1.4-1.2 2q-1.1 2.4-2.4 4.6zm-302-0.3q-0.4-0.5-0.7-0.9-0.4-0.5-0.7-1-0.3-0.5-0.6-1-0.3-0.5-0.6-1l-0.5-1.1c-1-1.8-1.9-3.7-2.7-5.5q-0.3-0.5-0.5-1.1-0.2-0.6-0.4-1.1-0.2-0.6-0.4-1.2-0.2-0.6-0.4-1.2c-0.2-0.7-0.5-1.5-0.8-2.3-0.6-1.4-1-3-1.5-4.5q-0.3-1.2-0.8-2.4c-0.4-1.3-0.8-2.6-1.1-3.9l15.9-4q0.3 1.2 0.7 2.5c0.3 1 0.7 2.1 1 3.1 0.3 1.1 0.6 2.1 1 3.1 0.4 1 0.8 2.4 1.2 3.5q0.1 0.4 0.2 0.7 0.1 0.4 0.3 0.7 0.1 0.4 0.2 0.7 0.2 0.3 0.3 0.7c0.7 1.6 1.5 3.2 2.3 4.8l0.6 1.1q0.1 0.2 0.2 0.3 0.1 0.1 0.2 0.3 0.1 0.1 0.2 0.3 0.1 0.1 0.2 0.2zm320.9-53.3c-1.5 0.2-16-3-16.1-2.6l0.2-1c1-6.1 1-12.7 1.2-18.9 0-1.1-0.6-4.6 0.2-5.4 0.9-0.9 4.7-0.3 5.9-0.3 3 0 6.1-0.5 9-0.1 0.9 0.2 0.9 0 1.2 0.7q0.1 0.3 0.1 0.6 0.1 0.4 0.1 0.7 0 0.3 0 0.6 0 0.4-0.1 0.7 0 2.5-0.2 5c-0.6 6.8-1.5 13.3-1.5 20zm-339.2-1.1l8-2-8 1.6q-0.2-0.6-0.3-1.2-0.2-0.6-0.3-1.2-0.1-0.6-0.2-1.2-0.1-0.6-0.2-1.2l-0.4-2.3c-0.2-1.6-0.4-3.3-0.6-5v-0.7c-0.2-2.1-0.4-4.3-0.5-6.5 0-1.4 0-2.7 0-4v-3.3c0-0.9 0-1.7 0-2.5l16.4 0.9c0 0.5 0 1 0 1.6v3.3c0 1.1 0 2.2 0 3.3 0.1 2 0.3 3.9 0.5 5.9v0.7c0.1 1.3 0.3 2.6 0.5 3.9l0.4 2.6q0.1 0.4 0.1 0.8 0.1 0.3 0.2 0.7 0 0.3 0.1 0.7 0.1 0.3 0.2 0.6l-7.8 2.5zm323.6-49.1l-0.1-1.3c-0.1-1-0.1-2-0.3-3-0.1-1-0.5-2.2-0.7-3.2q-0.5-1.6-0.8-3.2-0.1-0.4-0.2-0.8-0.1-0.4-0.2-0.8-0.1-0.3-0.3-0.7-0.1-0.4-0.2-0.7c-0.4-1.2-0.7-2.3-1-3.4q-0.8-3.2-1.8-6.4l-0.4-1.3 15.7-4.7 0.4 1.2q1 3.5 2 7 0.3 1.2 0.7 2.4c0.5 1.5 1 3 1.3 4.6q0.3 1.3 0.6 2.5c0.4 1.5 0.8 3.1 1.1 4.6q0.1 0.6 0.2 1.2 0.1 0.6 0.1 1.2 0.1 0.6 0.1 1.1 0.1 0.6 0.1 1.2l0.1 1.1zm-307.9-4.7l-15.6-4.7q0.4-1.4 1-2.7 0.1-0.3 0.2-0.5 0.1-0.2 0.1-0.5 0.1-0.2 0.2-0.5 0.1-0.2 0.1-0.5c0.4-1.5 0.8-3 1.3-4.6q0.3-1.2 0.6-2.4c0.2-0.8 0.4-1.6 0.6-2.4 0.3-1.6 0.6-3.2 1.1-4.7 0.2-0.8 0.4-1.6 0.6-2.4q0.2-0.6 0.3-1.2 0.1-0.6 0.3-1.1 0.2-0.6 0.3-1.2 0.2-0.6 0.4-1.1 0.1-0.2 0.1-0.4 0.1-0.2 0.2-0.4 0.1-0.1 0.1-0.3 0.1-0.2 0.2-0.4l14.8 6.8q-0.1 0.4-0.2 0.7-0.1 0.4-0.2 0.8-0.1 0.4-0.2 0.7-0.1 0.4-0.2 0.8c-0.3 1.2-0.6 2.4-0.9 3.5-0.4 1.2-0.5 2.1-0.7 3.1-0.2 1.1-0.5 2.3-0.8 3.4q-0.4 1.4-0.8 2.8c-0.3 1.2-0.7 2.3-0.9 3.5q-0.2 0.6-0.3 1.1-0.2 0.5-0.3 1.1-0.2 0.5-0.4 1.1-0.2 0.5-0.4 1-0.3 0.8-0.6 1.6zm292.2-43.5c-0.4-0.8-0.9-1.5-1.3-2.2q-1-1.5-1.9-3c-1.1-2-1.6-4.1-2.8-6-1.3-1.9-2.7-3.5-4-5.3q-1.8-2.7-3.7-5.3c4.2-3.3 8.4-7.2 13-10 0.9 1.2 2.2 2.2 3.1 3.3q0.4 0.5 0.8 1 0.4 0.5 0.7 1 0.3 0.6 0.7 1.1 0.3 0.5 0.6 1.1c0.8 1.3 1.9 2.5 2.7 3.8 0.8 1.3 1.4 2.8 2.4 4.1 1.8 2.7 2.5 5.7 4 8.5zm-274.1-5.8l-14.3-7.8c0.3-0.7 0.6-1.4 1-2.1q0.2-0.6 0.5-1.2 0.2-0.5 0.5-1 0.3-0.6 0.6-1.1 0.3-0.6 0.6-1.1 0.3-0.5 0.7-1.1 0.4-0.5 0.8-1 0.4-0.5 0.8-1 0.5-0.5 0.9-1 0.2-0.2 0.4-0.4 0.2-0.2 0.3-0.4 0.2-0.2 0.4-0.4 0.1-0.2 0.3-0.4c1-1.5 2-2.9 3.1-4.3l1.2-1.6q0.7-1 1.4-2 1.2-1.7 2.6-3.4l12.8 10.1c-0.7 0.9-1.3 1.8-2 2.7-0.7 0.9-1.1 1.6-1.7 2.4l-1.3 1.7c-0.9 1.2-1.8 2.4-2.6 3.6q-0.3 0.5-0.7 0.9-0.3 0.5-0.6 0.9-0.4 0.4-0.7 0.8-0.4 0.4-0.8 0.8-0.2 0.2-0.4 0.4-0.2 0.2-0.3 0.5-0.2 0.2-0.4 0.4-0.2 0.2-0.3 0.4-0.2 0.3-0.4 0.7-0.1 0.3-0.3 0.6-0.1 0.3-0.3 0.6-0.1 0.3-0.3 0.6c-0.4 1.1-0.9 2.2-1.5 3.2zm243.3-35.8q-0.3-0.3-0.5-0.5-0.3-0.3-0.6-0.5-0.3-0.3-0.6-0.5-0.4-0.3-0.7-0.5-1.5-1.1-3-2.3-1.1-1-2.2-2.1c-0.7-0.7-1.7-1.6-2.7-2.4l-1.8-1.5c-1.1-0.9-2.1-1.8-3.3-2.6-1.3-1-2.6-1.8-4-2.7l-0.6-0.5 9-13.6 0.7 0.5q2.3 1.5 4.6 3.1c1.5 1.2 2.7 2.1 4 3.2l1.7 1.4c1.2 1 2.4 2.1 3.6 3.2q0.9 0.9 1.8 1.7c0.6 0.5 1.3 1 1.9 1.5q0.5 0.3 1 0.7 0.5 0.4 1 0.8 0.4 0.3 0.9 0.8 0.5 0.4 0.9 0.8l0.4 0.4zm-211.2-4l-10.5-12.6 0.6-0.5c0.6-0.5 1.2-1 1.8-1.6 1.1-1.1 2.3-2.2 3.6-3.2q0.5-0.4 1-0.8 0.5-0.4 1.1-0.7 0.5-0.4 1-0.7 0.6-0.3 1.2-0.6 0.2-0.1 0.4-0.3 0.3-0.1 0.5-0.2 0.3-0.2 0.5-0.3 0.2-0.2 0.4-0.3 0.2-0.2 0.4-0.4 0.2-0.1 0.4-0.3 0.2-0.2 0.3-0.3 0.2-0.2 0.3-0.4 0.5-0.5 1-1 0.5-0.4 1-0.9 0.5-0.4 1-0.9 0.6-0.4 1.1-0.8 0.6-0.3 1.1-0.7 0.6-0.3 1.2-0.6 0.6-0.3 1.2-0.6 0.6-0.2 1.2-0.5l1.3-0.5 6.9 14.8q-0.9 0.4-1.8 0.8-0.3 0.1-0.5 0.2-0.2 0.1-0.5 0.2-0.2 0.1-0.5 0.2-0.2 0.1-0.4 0.3-0.2 0.1-0.4 0.3-0.2 0.2-0.4 0.4-0.2 0.1-0.3 0.3-0.2 0.2-0.4 0.4-0.4 0.4-0.8 0.8-0.4 0.4-0.8 0.8-0.5 0.4-0.9 0.8-0.4 0.4-0.9 0.7-0.4 0.3-0.9 0.6-0.4 0.3-0.9 0.6-0.4 0.3-0.9 0.5-0.5 0.3-0.9 0.6-0.3 0.1-0.5 0.2-0.3 0.2-0.6 0.3-0.2 0.2-0.4 0.4-0.3 0.1-0.5 0.3c-1 0.8-1.8 1.6-2.7 2.4-0.9 0.8-1.5 1.4-2.2 2zm169-25.7l-1.2-0.5q-0.3-0.2-0.6-0.3-0.3-0.1-0.7-0.2-0.3-0.1-0.6-0.2-0.3-0.1-0.7-0.2c-1.2-0.4-2.5-0.8-3.7-1.3q-0.2-0.1-0.5-0.1-0.3-0.1-0.5-0.2-0.3 0-0.6-0.1-0.3-0.1-0.6-0.1-0.5-0.1-1-0.2-0.6-0.1-1.1-0.3-0.5-0.1-1-0.3-0.6-0.1-1.1-0.3c-1-0.3-1.9-0.7-2.8-1.1-1.1-0.4-2.2-0.8-3.4-1.2q-0.5-0.2-1-0.4-0.5-0.1-1-0.4-0.5-0.2-1-0.4-0.6-0.2-1.1-0.5l-1.1-0.5 6.5-15 1.6 0.7q0.3 0.2 0.5 0.3 0.2 0.1 0.5 0.2 0.2 0.1 0.4 0.2 0.3 0.1 0.5 0.2c1.6 0.4 3 1 4.6 1.6q1.1 0.5 2.3 0.9 0.2 0.1 0.5 0.1 0.2 0.1 0.5 0.2 0.3 0 0.5 0.1 0.3 0 0.5 0.1 0.7 0.1 1.3 0.2 0.6 0.2 1.3 0.4 0.6 0.1 1.2 0.3 0.6 0.2 1.2 0.5c0.8 0.3 1.6 0.5 2.3 0.7q0.6 0.2 1.2 0.4 0.6 0.2 1.2 0.4 0.6 0.2 1.1 0.4 0.6 0.2 1.2 0.5l1.7 0.8zm-126.7-1.1l-3.6-16q0.1 0 0.3 0 0.1-0.1 0.2-0.1 0.1 0 0.3-0.1 0.1 0 0.2-0.1 0.2-0.1 0.4-0.2 0.2-0.1 0.3-0.2 0.2-0.1 0.4-0.2 0.1-0.1 0.3-0.2 0.6-0.4 1.2-0.8 0.6-0.4 1.2-0.7 0.6-0.4 1.3-0.7 0.6-0.3 1.3-0.5c2.3-0.8 4.6-1.6 6.9-2.4q0.6-0.1 1.3-0.3 0.6-0.1 1.2-0.3 0.7-0.1 1.3-0.2 0.6-0.1 1.3-0.2 0.3 0 0.5 0 0.3 0 0.6-0.1 0.2 0 0.5-0.1 0.3 0 0.6-0.1 0.6-0.1 1.2-0.3 0.6-0.1 1.2-0.2 0.6-0.1 1.2-0.2 0.6-0.1 1.2-0.2l2.2 16.2q-0.3 0.1-0.7 0.1-0.4 0.1-0.8 0.1-0.4 0.1-0.7 0.2-0.4 0.1-0.8 0.1-0.5 0.2-1 0.3-0.6 0.1-1.1 0.2-0.5 0.1-1.1 0.1-0.5 0.1-1 0.2-0.3 0-0.6 0-0.3 0.1-0.6 0.1-0.3 0.1-0.6 0.1-0.2 0.1-0.5 0.2c-2.1 0.6-4.2 1.3-6.3 2.1q-0.2 0.1-0.4 0.2-0.1 0.1-0.3 0.2-0.2 0.1-0.4 0.2-0.1 0.1-0.3 0.2-0.5 0.4-1 0.7-0.6 0.4-1.1 0.7-0.6 0.3-1.2 0.6-0.5 0.3-1.1 0.5-0.4 0.2-0.8 0.3-0.4 0.2-0.9 0.3-0.4 0.2-0.8 0.3-0.4 0.1-0.9 0.2zm68.8-12.1h-1q-0.6 0-1.1-0.1-0.6 0-1.1-0.1-0.6-0.1-1.1-0.2-0.6 0-1.1-0.2-0.3 0-0.5-0.1-0.3 0-0.6-0.1-0.2 0-0.5 0-0.3-0.1-0.6-0.1h-3.4q-1.6 0-3.2 0.1-0.3 0-0.6 0-0.4 0.1-0.7 0.1-0.3 0-0.7 0.1-0.3 0-0.6 0.1l-2.4-16.2q0.5-0.1 1.1-0.2 0.5 0 1-0.1 0.6-0.1 1.1-0.1 0.6 0 1.1-0.1 2 0 3.9 0h3.4q0.7 0 1.3 0 0.7 0.1 1.4 0.1 0.6 0.1 1.3 0.2 0.6 0.1 1.2 0.3 0.3 0 0.5 0.1 0.3 0 0.5 0.1 0.3 0 0.5 0 0.3 0.1 0.5 0.1c0.9 0 1.7 0 2.4-0.1q0.6-0.1 1.2-0.1 0.7 0 1.3 0 0.6 0 1.2 0 0.7 0 1.3 0 1.2 0.1 2.3 0.2l-0.6 16.3c-1.1 0-2.1-0.1-3.1-0.2h-0.5c-0.6 0-1.3 0-2 0.1-1 0.1-2 0.1-3.1 0.1z"/>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    </div>
                )
                }
            </div>
            <div
                className='bg-gray-200 text-gray-900 sm:min-w-full sm:h-0 sm:min-h-full rounded-lg shadow-lg row-span-2 sm:overflow-auto flex flex-col items-center'>
                {fiche.entite ?
                    <>
                        <h2 className='font-bold'>{t('card_map_data.title_district')} {fiche.entite}</h2>

                        <div className='w-11/12 p-4'>
                            <Line type={"line"} data={data}
                                  options={{
                                      legend: {
                                          display: true
                                      },
                                      title: {
                                          display: true,
                                          text: 'this.props.title'
                                      },
                                      options: {
                                          scales: {
                                              xAxes: [{
                                                  ticks: {
                                                      reverse: true
                                                  }
                                              }]
                                          }
                                      }
                                  }}/>
                        </div>
                        <div className='w-full'>
                            {reverse.filter(reve => reve.year !== '2022').map((reve, i) => (
                                <Data4 key={reve.id} props={reve}/>
                            ))}
                        </div>

                    </>
                    :
                    <h2 className='font-bold text-4xl m-auto text-center px-4'>{t('card_map_data.title')}</h2>
                }

            </div>
        </>
    );
}
export default Map;
